# This file was generated by Simplicity Studio from the following template:
#  protocol/zigbee/tool/appbuilder/host-simulation-Makefile-afv2
# Please do not edit it directly.

# This Makefile defines how to build a simulated host application connected to a
# simulated Ember NCP EZSP SPI device.  

# Remove all built-in rules.
# All we need is contained within this file.
.SUFFIXES:

# Variables
ifdef E_CC
  CC := $(E_CC)
else
  CC := gcc
endif

# LD is set to CC so that we can properly pull in the necessary object
# files that contain the code that runs prior to main() and is a standard part of
# a GNU C executable.
LD := $(CC)
SHELL := /bin/sh

# Find the right base and set GLOBAL_BASE_DIR and GLOBAL_RAIL_LIB_DIR.
GLOBAL_BASE_DIR := ../../platform/base
GLOBAL_RAIL_LIB_DIR := ../../platform/radio/rail_lib



# Makefile Variable replacement by sample-apps-regenerate.pl
APP_BUILDER_OUTPUT_DIRECTORY=app/framework/scenarios/z3/Z3GatewayWithWwah/gen/simulation-ezsp
# Makefile Variable replacement by sample-apps-regenerate.pl
APP_CALLBACK_FILE_DIRECTORY=app/framework/scenarios/z3/Z3GatewayWithWwah
APP_BUILDER_CONFIG_HEADER=$(APP_BUILDER_OUTPUT_DIRECTORY)/Z3GatewayWithWwah.h
APP_BUILDER_STORAGE_FILE=$(APP_BUILDER_OUTPUT_DIRECTORY)/Z3GatewayWithWwah_endpoint_config.h

# Global defines allows the user to add #defines across all files
# All files will be compiled this way and the output directory
# will reflect these additional parameters as well.
# They can be specified on the command-line as follows:
#   make -f Foo.mak GLOBAL_DEFINES=EMBER_TEST
#   make -f Foo.mak GLOBAL_DEFINES="EMBER_TEST SOME_OTHER_DEFINE"
ifdef GLOBAL_DEFINES
  OUTPUT_DIR_GLOBAL_DEFINES_PATH=-$(shell echo $(GLOBAL_DEFINES) | sed -e 's/ /\-/g')
  COMPILER_GLOBAL_DEFINES=-D$(shell echo $(GLOBAL_DEFINES) | sed -e 's/ / \-D/g')
endif

INCLUDES= \
  -I. \
  -I$(APP_BUILDER_OUTPUT_DIRECTORY) \
  -I./app/framework/cli \
  -I./app/framework/include \
  -I./app/framework/scenarios/z3/Z3GatewayWithWwah/gen/simulation-ezsp/../../../../../../../../../platform/base/hal/micro/unix/simulation/board \
 \
  -I./app/framework/security \
  -I./app/framework/util \
  -I./app/util \
  -I./app/util/common \
  -I./app/util/serial \
  -I./app/util/zigbee-framework \
  -I$(GLOBAL_BASE_DIR) \
  -I$(GLOBAL_BASE_DIR)/hal \
  -I$(GLOBAL_BASE_DIR)/hal/plugin \
  -I$(GLOBAL_BASE_DIR)/hal/micro/generic \
  -I$(GLOBAL_BASE_DIR)/hal/micro/unix/host/generic \
  -I$(GLOBAL_BASE_DIR)/hal/micro/unix/simulation \
  -I$(GLOBAL_RAIL_LIB_DIR)/plugin \
  -I./stack \
  -I./tool/simulator/child \
  -I../..

DEFINES= \
  $(COMPILER_GLOBAL_DEFINES) \
  -DUNIX \
  -DPHY_NULL \
  -DCONFIGURATION_HEADER=\"app/framework/util/config.h\" \
  -DEZSP_HOST \
  -DEMBER_TEST \
  -DZA_GENERATED_HEADER=\"$(APP_BUILDER_CONFIG_HEADER)\" \
  -DATTRIBUTE_STORAGE_CONFIGURATION=\"$(APP_BUILDER_STORAGE_FILE)\" \
  -DPLATFORM_HEADER=\"$(GLOBAL_BASE_DIR)/hal/micro/unix/compiler/gcc.h\" \
    -DBOARD_SIMULATION \
  -DBOARD_HEADER=\"Z3GatewayWithWwah_board.h\" \
  -DEM_AF_TEST_HARNESS_CODE \
  -DEM_AF_LINK_M \
  -DEM_AF_LINK_PTHREAD \
  -DEMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\" \
  -DEMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\" \
  -DEMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\" \
  -DEMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\" \
  -DEMBER_AF_API_NEIGHBOR_HEADER=\"stack/include/stack-info.h\" \
  -DEMBER_STACK_ZIGBEE \
  -DEZSP_ASH \

  -DBOARD_HEADER=\"$(GLOBAL_BASE_DIR)/hal/micro/unix/simulation/board/simulation.h\" \


# Clang warns about many more things than GCC.  The most warnings, by far, are
# about potential cast alignment problems.  To reduce the flood of warnings a
# little, -Wcast-align and -Wno-missing-braces is not used with Clang.
CLANG = $(shell $(CC) 2>&1 | grep -iqs clang ; echo $$?)
ifeq "$(CLANG)" "0"
  WNO_CLANG_WARNINGS= -Wno-error=deprecated-declarations -Wno-error=cast-align -Wno-error=missing-braces -Wno-error=pointer-sign
else
  WNO_CLANG_WARNINGS= -Wno-error=deprecated-declarations -Wno-error=cast-align -Wno-error=missing-braces -Wno-error=pointer-sign -Wno-error=unused-but-set-variable
endif

SIMULATION_FILES= \
  tool/simulator/child/child-main.c  \
  tool/simulator/child/spawn.c  \
  tool/simulator/child/timer.c  \
  tool/simulator/child/uart.c

HOST_SIMULATION_FILES= \
  tool/simulator/child/ezsp-host-stubs.c \
  $(GLOBAL_BASE_DIR)/hal/micro/unix/simulation/ezsp-host-sim.c

SPI_HOST_FILES= \
  $(GLOBAL_BASE_DIR)/hal/micro/unix/simulation/spi-protocol-ncp-sim.c

APPLICATION_FILES= \
  $(APP_BUILDER_OUTPUT_DIRECTORY)/znet-bookkeeping.c \
  $(APP_BUILDER_OUTPUT_DIRECTORY)/call-command-handler.c \
  $(APP_BUILDER_OUTPUT_DIRECTORY)/callback-stub.c \
  $(APP_BUILDER_OUTPUT_DIRECTORY)/znet-cli.c \
  $(APP_BUILDER_OUTPUT_DIRECTORY)/stack-handler-stub.c \
  $(APP_CALLBACK_FILE_DIRECTORY)/Z3GatewayWithWwah_callbacks.c \
  app/util/common/library.c \
  app/util/serial/command-interpreter2.c \
  $(GLOBAL_BASE_DIR)/hal/plugin/serial/serial.c \
  app/util/security/security-address-cache.c \
  app/util/zigbee-framework/zigbee-device-common.c \
  app/util/zigbee-framework/zigbee-device-host.c \
  stack/framework/event-control.c \
  $(SIMULATION_FILES) \
  $(HOST_SIMULATION_FILES) \
  $(SPI_HOST_FILES) \
  $(GLOBAL_BASE_DIR)/hal/plugin/buzzer-stub/buzzer-stub.c \
  $(GLOBAL_BASE_DIR)/hal/micro/generic/crc.c \
  $(GLOBAL_BASE_DIR)/hal/micro/generic/led-stub.c \
  $(GLOBAL_BASE_DIR)/hal/micro/generic/mem-util.c \
  $(GLOBAL_BASE_DIR)/hal/micro/unix/simulation/symbol-timer-sim.c \
  $(GLOBAL_BASE_DIR)/hal/micro/unix/simulation/system-timer-sim.c \
  $(GLOBAL_BASE_DIR)/hal/micro/unix/simulation/button.c \
  $(GLOBAL_BASE_DIR)/hal/micro/unix/simulation/micro.c \
  $(GLOBAL_BASE_DIR)/hal/micro/unix/simulation/fake-eeprom.c \
  $(GLOBAL_BASE_DIR)/hal/micro/unix/simulation/random-sim.c \
  app/framework/plugin/address-table/address-table.c \
  app/framework/plugin/address-table/address-table-cli.c \
  app/framework/plugin/basic/basic.c \
  app/framework/plugin/color-control-server/color-control-server.c \
  app/framework/plugin/compact-logger/compact-logger.c \
  app/framework/plugin/compact-logger/compact-logger-cli.c \
  app/framework/plugin/concentrator/concentrator-support.c \
  app/framework/plugin/concentrator/concentrator-support-cli.c \
  app/framework/plugin/counters/counters-cli.c \
  app/framework/plugin/counters/counters-ota-host.c \
  app/framework/plugin/counters/counters-host.c \
  ../../util/plugin/plugin-common/eeprom/eeprom.c \
  ../../util/plugin/plugin-afv2/eeprom/eeprom-afv2.c \
  ../../util/plugin/plugin-common/eeprom/eeprom-cli.c \
  ../../platform/base/hal/plugin/serial/ember-printf.c \
  app/framework/plugin/ezmode-commissioning/ez-mode.c \
  app/framework/plugin/ezmode-commissioning/ez-mode-cli.c \
  app/util/ezsp/ezsp-callbacks.c \
  app/util/ezsp/ezsp-enum-decode.c \
  app/util/ezsp/ezsp-frame-utilities.c \
  app/util/ezsp/ezsp.c \
  app/util/ezsp/serial-interface-uart.c \
  app/ezsp-host/ash/ash-host-ui.c \
  app/ezsp-host/ash/ash-host.c \
  ../../platform/base/hal/micro/generic/ash-common.c \
  app/util/gateway/backchannel-stub.c \
  app/ezsp-host/ezsp-host-io-sim.c \
  app/ezsp-host/ezsp-host-queues.c \
  app/ezsp-host/ezsp-host-ui.c \
  app/framework/plugin/fragmentation/fragmentation.c \
  app/framework/plugin/fragmentation/fragmentation-cli.c \
  app/framework/plugin/fragmentation/fragmentation-host.c \
  app/framework/plugin/general-response-commands/general-response-commands.c \
  app/framework/plugin/green-power-client/green-power-client.c \
  app/framework/plugin/green-power-client/green-power-client-cli.c \
  app/framework/plugin/green-power-common/green-power-common.c \
  stack/gp/gp-util.c \
  app/framework/plugin/heartbeat/heartbeat.c \
  app/framework/plugin/ias-zone-client/ias-zone-client.c \
  app/framework/plugin/ias-zone-client/ias-zone-client-cli.c \
  app/framework/plugin/identify/identify.c \
  app/framework/plugin/identify/identify-cli.c \
  app/framework/plugin/identify-feedback/identify-feedback.c \
  app/framework/plugin/level-control/level-control.c \
  ../../util/plugin/plugin-common/linked-list/linked-list.c \
  app/framework/plugin-host/ncp-configuration/ncp-configuration.c \
  app/framework/plugin/network-creator/network-creator.c \
  app/framework/plugin/network-creator/network-creator-cli.c \
  app/framework/plugin/network-creator-security/network-creator-security.c \
  app/framework/plugin/network-creator-security/network-creator-security-cli.c \
  app/framework/plugin/network-steering/network-steering.c \
  app/framework/plugin/network-steering/network-steering-cli.c \
  app/framework/plugin/network-steering/network-steering-v2.c \
  app/framework/plugin/network-steering/network-steering-host.c \
  app/framework/plugin/on-off/on-off.c \
  app/framework/plugin/ota-common/ota-common.c \
  app/framework/plugin/ota-server/ota-server.c \
  app/framework/plugin/ota-server/ota-server-page-request.c \
  app/framework/plugin/ota-server/ota-server-cli.c \
  app/framework/plugin/ota-server/ota-server-dynamic-block-period.c \
  app/framework/plugin/ota-server-policy/ota-server-policy.c \
  app/framework/plugin/ota-storage-common/ota-storage-common.c \
  app/framework/plugin/ota-storage-common/ota-storage-common-cli.c \
  app/framework/plugin/ota-storage-simple/ota-storage-simple.c \
  app/framework/plugin/ota-storage-simple/ota-storage-simple-simulation.c \
  app/framework/plugin/ota-storage-simple-eeprom/ota-storage-eeprom.c \
  app/framework/plugin/ota-storage-simple-eeprom/ota-storage-eeprom-page-erase.c \
  app/framework/plugin/ota-storage-simple-eeprom/ota-storage-eeprom-read-modify-write.c \
  app/framework/plugin/poll-control-client/poll-control-client.c \
  app/framework/plugin/poll-control-client/poll-control-client-cli.c \
  app/framework/plugin/reporting/reporting.c \
  app/framework/plugin/reporting/reporting-cli.c \
  app/framework/plugin/reporting/reporting-default-configuration.c \
  app/framework/plugin/ring-buffer/ring-buffer.c \
  app/framework/plugin/scan-dispatch/scan-dispatch.c \
  app/util/ezsp/secure-ezsp-stub.c \
  app/framework/plugin/simple-clock/simple-clock.c \
  app/framework/plugin/simple-main/simple-main.c \
  app/framework/plugin/simple-metering-client/simple-metering-client.c \
  app/framework/plugin/simple-metering-client/simple-metering-client-cli.c \
  app/framework/plugin/stack-diagnostics/stack-diagnostics.c \
  app/framework/plugin/test-harness/test-harness.c \
  app/framework/plugin/test-harness/read-write-attributes.c \
  app/framework/plugin/test-harness/test-harness-host.c \
  app/framework/plugin/time-server/time-server.c \
  app/framework/plugin/trust-center-backup/trust-center-backup.c \
  app/framework/plugin/trust-center-backup/trust-center-backup-cli.c \
  app/framework/plugin/trust-center-backup/trust-center-backup-cli-posix.c \
  app/framework/plugin/trust-center-backup/trust-center-backup-posix.c \
  app/framework/plugin/trust-center-nwk-key-update-broadcast/trust-center-nwk-key-update-broadcast.c \
  app/framework/plugin/trust-center-nwk-key-update-periodic/trust-center-nwk-key-update-periodic.c \
  app/framework/plugin/trust-center-nwk-key-update-unicast/trust-center-nwk-key-update-unicast.c \
  ../../platform/base/hal/micro/unix/host/token-ram-unix.c \
  app/framework/plugin/update-tc-link-key/update-tc-link-key.c \
  app/framework/plugin/update-tc-link-key/update-tc-link-key-cli.c \
  app/framework/plugin/wwah-client-silabs/wwah-client-silabs.c \
  app/framework/cli/core-cli.c \
  app/framework/cli/network-cli.c \
  app/framework/cli/option-cli.c \
  app/framework/cli/plugin-cli.c \
  app/framework/cli/security-cli.c \
  app/framework/cli/zcl-cli.c \
  app/framework/cli/zdo-cli.c \
  app/framework/security/af-node.c \
  app/framework/security/af-security-common.c \
  app/framework/security/af-trust-center.c \
  app/framework/security/crypto-state.c \
  app/framework/util/af-event.c \
  app/framework/util/af-main-common.c \
  app/framework/util/attribute-size.c \
  app/framework/util/attribute-storage.c \
  app/framework/util/attribute-table.c \
  app/framework/util/client-api.c \
  app/framework/util/message.c \
  app/framework/util/multi-network.c \
  app/framework/util/print.c \
  app/framework/util/print-formatter.c \
  app/framework/util/process-cluster-message.c \
  app/framework/util/process-global-message.c \
  app/framework/util/service-discovery-common.c \
  app/framework/util/time-util.c \
  app/framework/util/util.c \
  app/framework/util/af-main-host.c \
  app/framework/util/service-discovery-host.c \
  app/framework/plugin/zigbee-event-logger/zigbee-event-logger.c \
  app/framework/plugin/zigbee-event-logger/zigbee-event-logger-gen.c \
  app/framework/plugin/zigbee-event-logger/zigbee-event-logger-internal.c \
  app/framework/plugin/zigbee-event-logger/zigbee-event-logger-print-gen.c \
  app/framework/plugin/zigbee-event-logger/zigbee-event-logger-cli.c \
  app/framework/plugin/zigbee-event-logger/zigbee-event-logger-host.c \


BUILD_DIR        = build
AF_TEST_APPS_DIR = $(BUILD_DIR)/af-test-apps
# Makefile Variable replacement by sample-apps-regenerate.pl
OUTPUT_DIR=$(AF_TEST_APPS_DIR)/Z3GatewayWithWwah-simulation-ezsp
# A subtetly exists here.  We use the := variable syntax so we don't do recursive variable
# substitution.  The assumption being that both of these variables don't contain additional
# variables that must be resolved.  I tried using += without any success, and
# so := was the best alternative.
OUTPUT_DIR := $(OUTPUT_DIR)$(OUTPUT_DIR_GLOBAL_DEFINES_PATH)

# Build a list of object files from the source file list, but all objects
# live in the $(OUTPUT_DIR) above.  The list of object files
# created assumes that the file part of the filepath is unique
# (i.e. the bar.c of foo/bar.c is unique across all sub-directories included).
APPLICATION_OBJECTS= $(addprefix $(OUTPUT_DIR)/, $(notdir $(APPLICATION_FILES:.c=.o)))

APP_FILE= $(OUTPUT_DIR)/Z3GatewayWithWwah

CFLAGS= -ggdb -O0 -Wall -Werror $(WNO_CLANG_WARNINGS)
CPPFLAGS= $(DEFINES) $(INCLUDES) -MF $(OUTPUT_DIR)/$(@F:.o=.d) -MMD -MP

# Note:  Order matters.  This will insure linking will match up all the references since
# we only perform a single link pass.
LIBRARIES = \
 \


LINK_FLAGS=

# Conditionally include the math library if EM_AF_LINK_M is defined.
ifeq ($(findstring -DEM_AF_LINK_M,$(DEFINES)),-DEM_AF_LINK_M)
  LINK_FLAGS += \
    -lm
endif

# Conditionally include the POSIX threads library if EM_AF_LINK_PTHREAD is
# defined.
ifeq ($(findstring -DEM_AF_LINK_PTHREAD,$(DEFINES)),-DEM_AF_LINK_PTHREAD)
  LINK_FLAGS += \
    -lpthread
endif

# Rules

all: $(APP_FILE)

ifneq ($(MAKECMDGOALS),clean)
-include $(APPLICATION_OBJECTS:.o=.d)
endif

$(APP_FILE): $(APPLICATION_OBJECTS) $(LIBRARIES) | $(OUTPUT_DIR)
	$(LD) $^ $(LINK_FLAGS) -o $(APP_FILE)
	@echo -e '\n$@ build success'

define make-deps 
$(OUTPUT_DIR)/$(notdir $(1:%.c=%.o)): $1 | $(OUTPUT_DIR) 
endef 
 
$(foreach d, $(APPLICATION_FILES), $(eval $(call make-deps,$d))) 
 
%.o :
	$(CC) $(CPPFLAGS) $(CFLAGS) -c -o $@ $<

$(BUILD_DIR):
	@mkdir $@

$(AF_TEST_APPS_DIR): | $(BUILD_DIR)
	@mkdir $@

$(OUTPUT_DIR): | $(AF_TEST_APPS_DIR)
	@mkdir $@

clean:
	rm -rf $(OUTPUT_DIR)

include stack-libs.mak
