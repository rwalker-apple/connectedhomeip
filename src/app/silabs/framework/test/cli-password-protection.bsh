/*
 * This test is exluded from the genral make test (excludedBeanshellFile)
 * in order ro enable it cli-passowrd-protection plugin ned sto be enabled in haLight app
 */
import com.ember.peek.SimulatedNetwork;

source("util.bsh");

if (runArgument.runUsingHostApps) {
std.print("****TODO: Fix for host****");
return;
}

// Create a light, a switch and a combined interface in the network.
SimulatedNetwork network = createNetwork();
String[] devices = new String[]{"light"};

String[] socImages = new String[] {
"build/af-test-apps/HaLight-simulation/HaLight",
};
String[] hostImages = new String[] {
"",
};
String ncpImage = "";

// Create network and load devices according
// to the runArguments provided
addAndLoadDevices(devices, socImages, hostImages, ncpImage);

int timeout = 50000;
//set the initial password
expect ("light","ys",".*Invalid.*");
expect ("light","7305",".*Re-enter new password:.*");
expect ("light","0xF453",".*Enter new password.*");

expect ("light","7305",".*Re-enter new password:.*");
expect ("light","0x1C89",".*password is set.*");
  

network.reset("light");  


for(int i = 0; i<5; ++i)
{
expect ("light","5444",".*Need to wait for.*");
networkWait(timeout);
}
nexpect ("light","5444",".*Need to wait.*"); //it should be locked after 5 attempts

networkWait(timeout * 10);
network.reset("light");
networkWait(timeout * 10);// CLI is still locked for another whole lockout period

nexpect ("light","info",".*security.*");

networkWait(timeout * 20);

expect ("light","7305",".*proceed.*");//default password

expect ("light","info",".*security.*");

network.reset("light");

expect ("light","7305",".*proceed.*");

expect ("light","plugin cli-password-protection changePassword 89s98",".*needs to be a number.*");

nexpect ("light","plugin cli-password-protection changePassword 8998",".*ERR.*");
networkWait(timeout);

network.reset("light");                                                         
                                                                                
expect ("light","8998",".*proceed.*");
networkWait(timeout);  
