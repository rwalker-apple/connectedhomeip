/*
* Run Instructions: 
* 1. flash init, target1, an target2 apps to individual devices
* 2. call beanshell script and pass in IP addresses
*
* NOTES: 
*   init    -> Z3SwitchSoc with ZLL client cluster
*   target1 -> Z3LightSoc with ZLL server cluster and rxON to ch 11 (stealing = FALSE)
*   target2 -> Z3LightSoc with ZLL server cluster and rxOn to ch 15 (stealing = FALSE)
*
* --------
* cd zigbee
* commander flash --ip $2 "$1"/init.s37 --device efr32mg21p
* commander flash --ip $3 "$1"/target1.s37 --device efr32mg21p
* commander flash --ip $4 "$1"/target2.s37 --device efr32mg21p
* java -cp ../../tool/beanshell/bsh-2.0b4.jar:build bsh.Interpreter app/framework/test/jenkins/zll.bsh -init $2 -target1 $3 -target2 $4
* }
*/


cd(dirname(pathToFile(getSourceFileInfo()).getAbsolutePath()));
source("util.bsh");

String init = null;
String target1 = null;
String target2 = null;

ArrayList args = new ArrayList();
if (bsh.args != void) {
  args.addAll(Arrays.asList(bsh.args));
}

for (int i=0; i<args.size(); i++) {
  String arg = args.get(i);
  if (arg.contains("-init")) {
    init = args.get(++i);
  }
  if (arg.contains("-target1")) {
    target1 = args.get(++i);
  }
  if (arg.contains("-target2")) {
    target2 = args.get(++i);
  }
}

if (init == null) {
  System.out.println("initiator IP address not set!");
  System.exit(-1);
}

if (target1 == null) {
  System.out.println("target1 IP address not set!");
  System.exit(-1);
}

if (target2 == null) {
  System.out.println("target2 IP address not set!");
  System.exit(-1);
}

String[] nodes = new String[] {
  init, target1, target2,
};

//-------------------------------------------------------

int NUM_EXECUTIONS = 100;
int timeout = 15000;

void testZllCommissioning()
{


  send(init, "plugin zll-commissioning reset");
  send(target1, "plugin zll-commissioning reset");
  send(target2, "plugin zll-commissioning reset");

  sleep(10000);

  expect(init, 
         "plugin zll-commissioning link",
         "Sending start request to target",
         timeout,
         false);

  sleep(10000);

  expect(init,
         "plugin zll-commissioning link",
         "Sending join request to target",
         timeout,
         false);

  sleep(10000);
}

//-------------------------------------------------------
// The actual test

initNetwork(nodes);

for (int i = 0; i < NUM_EXECUTIONS; i++) {
  sleep(1000);
  testZllCommissioning();
}


System.exit(0);
