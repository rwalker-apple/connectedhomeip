
// ***************************************************
// TEST SCRIPT
// ***************************************************
cd(dirname(pathToFile(getSourceFileInfo()).getAbsolutePath()));
source("util.bsh");

System.setOut(System.err);

String appName = "se-pct-afv2";

String dut = runArgument.dut;
String[] nodes = new String[] {
  dut,
};

boolean dutDrlcClientInfoSetup()
{
  printTestMessage("Drlc client Test Harness setup", true);
  thAddr = getTHShortID();
  if (thAddr == null) {
    print("TH id can not be loaded, run the test with the -f option.");
    return false;
  }
  tymeSync(dut, thAddr, sourceEndpoint, destEndpoint);
  print("In the DRLC tab set the class&UEG value (\"Set LCD Class & UEG\")");
  print("- You can read the device class and the UEG attributes using the commands in the DRLC tab (DRLC Server).");
  print("- The two values should be combined together (4 digits for the device class + 2 digits for the UEG)");
  pause("Press ENTER when done...");

  return true;
}

// Parse an event ID starting from the end of the output file (only last test).
String drlcParseEventId() {
  outputFile.flush();
  ArrayList outputFile = outputFileToArrayList(true);

  for(int j=outputFile.size() - 1; j >=0 ; j--) {
    String strLine = (String)outputFile.get(j);
    for(int i=0; i<strLine.length()-3; i++) {
      if (strLine.substring(i, i+3).equals("eid")) {
        return strLine.substring(i+5, i+13);
      }
    }
  }
  return null;
}

void test10_5_3_item1()
{
  String group = "DRLC";
  String section = "10.5.3";
  String item = "1";
  printTestTitle(group, section, item);
  if (skipThisTest())
      return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_6_3_item1()
{
  String group = "DRLC";
  String section = "10.6.3";
  String item = "1";
  printTestTitle(group, section, item);
  if (skipThisTest())
      return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_7_3_item1()
{
  String group = "DRLC";
  String section = "10.7.3";
  String item = "1";
  printTestTitle(group, section, item);
  if (skipThisTest())
      return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_7_3_item6()
{
  String group = "DRLC";
  String section = "10.7.3";
  String item = "6";
  printTestTitle(group, section, item);
  if (skipThisTest())
      return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_8_3_item1()
{
  String group = "DRLC";
  String section = "10.8.3";
  String item = "1";
  printTestTitle(group, section, item);
  if (skipThisTest())
      return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_9_3_item1()
{
  String group = "DRLC";
  String section = "10.9.3";
  String item = "1";
  printTestTitle(group, section, item);
  if (skipThisTest())
      return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_10_3_item1()
{
  String group = "DRLC";
  String section = "10.10.3";
  String item = "1";
  printTestTitle(group, section, item);
  if (skipThisTest())
    return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_11_3_item1()
{
  String group = "DRLC";
  String section = "10.11.3";
  String item = "1";
  printTestTitle(group, section, item);
  if (skipThisTest())
    return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_12_3_item1()
{
  String group = "DRLC";
  String section = "10.12.3";
  String item = "1";
  printTestTitle(group, section, item);
  if (skipThisTest())
    return;

  printTestMessage("- START the test in the SETest GUI. Press ENTER **AFTER** you started the test.");
  pause("");
  sleep(1000);
  runArgument.outputFile.flush();
  String eventId = drlcParseEventId();
  send(dut, "zcl drlc opt out 0x" + eventId);
  print("Sending OPT OUT command to DUT (event 0x" + eventId + ")");
  pause("Wait for response from Test Harness GUI. Press ENTER to continue...");
}

void test10_13_3_items1_7()
{
  String group = "DRLC";
  String section = "10.13.3";
  String item = "1-7";
  printTestTitle(group, section, item);
  if (skipThisTest())
    return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_14_3_item1()
{
  String group = "DRLC";
  String section = "10.14.3";
  String item = "1";
  printTestTitle(group, section, item);
  if (skipThisTest())
    return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_15_3_item1()
{
  String group = "DRLC";
  String section = "10.15.3";
  String item = "1";
  printTestTitle(group, section, item);
  if (skipThisTest())
    return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_16_3_item1()
{
  String group = "DRLC";
  String section = "10.16.3";
  String item = "1";
  printTestTitle(group, section, item);
  if (skipThisTest())
    return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_17_3_item1()
{
  String group = "DRLC";
  String section = "10.17.3";
  String item = "1";
  printTestTitle(group, section, item);
  if (skipThisTest())
    return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_18_3_item1()
{
  String group = "DRLC";
  String section = "10.18.3";
  String item = "1";
  printTestTitle(group, section, item);
  if (skipThisTest())
    return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_19_3_item1()
{
  String group = "DRLC";
  String section = "10.19.3";
  String item = "1";
  printTestTitle(group, section, item);
  if (skipThisTest())
    return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_23_3_item1()
{
  String group = "DRLC";
  String section = "10.23.3";
  String item = "1";
  printTestTitle(group, section, item);
  if (skipThisTest())
    return;
  tymeSync(dut, thAddr, sourceEndpoint, destEndpoint);
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_24_3_item1()
{
  String group = "DRLC";
  String section = "10.24.3";
  String item = "1";
  printTestTitle(group, section, item);
  if (skipThisTest())
    return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_25_3_items1_8()
{
  String group = "DRLC";
  String section = "10.25.3";
  String item = "1-8";
  printTestTitle(group, section, item);
  if (skipThisTest())
    return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_25_3_items9_16()
{
  String group = "DRLC";
  String section = "10.25.3";
  String item = "9-16";
  printTestTitle(group, section, item);
  if (skipThisTest())
    return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

void test10_25_3_item17()
{
  String group = "DRLC";
  String section = "10.25.3";
  String item = "17";
  printTestTitle(group, section, item);
  if (skipThisTest())
    return;
  printTestMessage("- START the test in the SETest GUI. Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}


void test10_26_3_item0()
{
  String group = "DRLC";
  String section = "10.26.3";
  String item = "0";
  printTestTitle(group, section, item);
  if (skipThisTest())
    return;
  printTestMessage("- START the test in the SETest GUI.");
  pause("- Press ENTER when the message \"Send GetScheduledEvents for all events now...\" appears in the SETest Console");
  send(dut, "zcl drlc gse 0 0");
  send(dut, "send " + thAddr + " " + sourceEndpoint + " " + destEndpoint);
  pause("- Press ENTER when the message \"Send GetScheduledEvents for one event now...\" appears in the SETest Console");
  send(dut, "zcl drlc gse 0 1");
  send(dut, "send " + thAddr + " " + sourceEndpoint + " " + destEndpoint);
  printTestMessage("- Wait for response from Test Harness GUI.");
  pause("Press ENTER to continue...");
}

TestNetwork t = new TestNetwork();
setTestNetwork(t);
setOutputFile(runArgument.outputFile);
setOutputFilename(runArgument.currentOutputFile);

for (int i = 0; i < nodes.length; i++) {
  t.add(nodes[i]);
}

t.connect(4901);
t.echo(true);

printTestMessage("DRLC - CLIENT", true);
print("NOTE: These tests assume that the sample app " + appName + " is running on the DUT");

if (runArgument.formNetwork) {
  networkSetupDutJoin(nodes,
                      dut,
                      runArgument.channel,
                      runArgument.power,
                      runArgument.panId);
  dutNetworkInfoSetup(dut);
}
dutDrlcClientInfoSetup();

test10_5_3_item1();
test10_6_3_item1();
test10_7_3_item1();
test10_7_3_item6();
test10_8_3_item1();
test10_9_3_item1();
test10_10_3_item1();
test10_11_3_item1();
test10_12_3_item1();
test10_13_3_items1_7();
test10_14_3_item1();
test10_15_3_item1();
test10_16_3_item1();
test10_17_3_item1();
test10_18_3_item1();
test10_19_3_item1();
test10_23_3_item1();
test10_24_3_item1();
test10_25_3_items1_8();
test10_25_3_items9_16();
test10_25_3_item17();
test10_26_3_item0();
